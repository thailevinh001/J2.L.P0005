/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DAO.Connection;
import static DAO.Connection.getDataBike;
import static DAO.Connection.getDataBrand;
import static DAO.Connection.getDataUser;
import DTO.Bike;
import DTO.Brand;
import java.sql.ResultSet;
import java.sql.Statement;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import static jdk.nashorn.tools.Shell.SUCCESS;

/**
 *
 * @author ADMIN
 */
public class BrandBikeUI extends javax.swing.JFrame {

    Vector<Brand> brList = new Vector<Brand>();
    Vector<String> headerBrand = new Vector<>();
    Vector<String> headerBike = new Vector<>();
    Vector dataBrand;
    Vector dataBike;
    DefaultTableModel defaultTableBrand;
    DefaultTableModel defaultTableBike;
    boolean addNew = false;
    boolean addNew1 = false;
    final int SUCCESS = 1;

    /**
     * Creates new form BrandUI
     */
    public BrandBikeUI() throws Exception {
        initComponents();
        headerBrand.add("Brand ID");
        headerBrand.add("Name");
        headerBrand.add("Country");
        headerBrand.add("Desciption");
        headerBike.add("Bike ID");
        headerBike.add("Model");
        headerBike.add("Year");
        headerBike.add("Condition");
        headerBike.add("Price");
        headerBike.add("Quantity");
        headerBike.add("Warranty");
        headerBike.add("Brand ID");
        loadDataBrand();
        loadDataBike();
        loadBrandCbBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBrand = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtBrandId = new javax.swing.JTextField();
        txtBrandName = new javax.swing.JTextField();
        txtCountry = new javax.swing.JTextField();
        txtDesciption = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBike = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtBikeId = new javax.swing.JTextField();
        txtModel = new javax.swing.JTextField();
        txtYear = new javax.swing.JTextField();
        txtCondition = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        txtQuantity = new javax.swing.JTextField();
        txtWarranty = new javax.swing.JTextField();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        cbBox = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Table brand", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 51, 204))); // NOI18N

        tblBrand.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblBrand.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBrandMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblBrandMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tblBrand);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 537, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Brand Detail"));

        jLabel1.setText("Brand ID:");

        jLabel2.setText("Brand Name:");

        jLabel3.setText("Country:");

        jLabel4.setText("Description:");

        jButton1.setText("Add new");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Save");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4)))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtBrandId)
                            .addComponent(txtBrandName)
                            .addComponent(txtCountry)
                            .addComponent(txtDesciption, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtBrandId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtBrandName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txtCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtDesciption, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Brand", jPanel1);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Bike Table", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 102, 204))); // NOI18N

        tblBike.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblBike.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBikeMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tblBikeMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tblBike);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 639, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 443, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Bike Detail", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(0, 102, 204))); // NOI18N

        jLabel5.setText("Motocycle ID:");

        jLabel6.setText("Model:");

        jLabel7.setText("Year:");

        jLabel8.setText("Condition:");

        jLabel9.setText("Price:");

        jLabel10.setText("Quantity:");

        jLabel11.setText("Warranty:");

        jLabel12.setText("Brand ID:");

        jButton4.setText("Add New");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Save");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Delete");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        cbBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10)
                            .addComponent(jLabel9)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtBikeId, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                            .addComponent(txtModel)
                            .addComponent(txtYear)
                            .addComponent(txtCondition)
                            .addComponent(txtPrice)
                            .addComponent(txtQuantity)
                            .addComponent(txtWarranty)
                            .addComponent(cbBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtBikeId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtCondition, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtWarranty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(cbBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(jButton5)
                    .addComponent(jButton6))
                .addGap(66, 66, 66))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Bike", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void loadDataBrand() {
        try {
            dataBrand = new Vector();
            for (Brand rd : DAO.Connection.getDataBrand()) {
                Vector row = new Vector();
                row.add(rd.getBrandID());
                row.add(rd.getBrandName());
                row.add(rd.getCountry());
                row.add(rd.getDescription());
                dataBrand.add(row);

            }
            defaultTableBrand = (DefaultTableModel) tblBrand.getModel();
            defaultTableBrand.setDataVector(dataBrand, headerBrand);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void loadDataBike() {
        try {
            dataBike = new Vector();
            for (Bike rd : DAO.Connection.getDataBike()) {
                Vector row = new Vector();
                row.add(rd.getMotoID());
                row.add(rd.getModel());
                row.add(rd.getYear());
                row.add(rd.getCondition());
                row.add(rd.getPrice());
                row.add(rd.getQuantity());
                row.add(rd.getWarranty());
                row.add(rd.getBrandID());

                dataBike.add(row);

            }
            defaultTableBike = (DefaultTableModel) tblBike.getModel();
            defaultTableBike.setDataVector(dataBike, headerBike);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private boolean findBrandNameBike(String brandName) throws Exception {
        for (int i = 0; i < Connection.getDataBike().size(); i++) {
            if (brandName.equalsIgnoreCase(getDataBike().get(i).getBrandID())) {
                return true;
            }
        }
        return false;

    }

    private boolean checkIdBrand(String brandID) throws Exception {
        for (int i = 0; i < Connection.getDataBrand().size(); i++) {
            if (brandID.equalsIgnoreCase(getDataBrand().get(i).getBrandID())) {
                return true;
            }
        }
        return false;
    }

    private boolean checkIdBike(String bikeID) throws Exception {
        for (int i = 0; i < Connection.getDataBike().size(); i++) {
            if (bikeID.equalsIgnoreCase(getDataBike().get(i).getMotoID())) {
                return true;
            }
        }
        return false;
    }

    private boolean validDataBrand() throws Exception {
        String S;
        S = txtBrandId.getText().trim().toUpperCase();
        txtBrandId.setText(S);
        if (!S.matches("^([0-9a-zA-Z]{1,10})")) {
            JOptionPane.showMessageDialog(this, "Brand ID: is not null, max length is 10, is not contains special characters");
            txtBrandId.requestFocus();
            return false;
        }

        S = txtBrandName.getText().trim().toUpperCase();
        txtBrandName.setText(S);
        if (S.length() >= 50 || S.length() == 0) {
            JOptionPane.showMessageDialog(this, "Name is required!!!.");
            txtBrandName.requestFocus();
            return false;
        }
        S = txtCountry.getText().trim();
        txtCountry.setText(S);
        if (!S.matches("^([a-zA-Z ]{1,50})")) {
            JOptionPane.showMessageDialog(this, "Max lenght is 50, only text!!");
            txtCountry.requestFocus();
            return false;
        }

        S = txtDesciption.getText();
        txtDesciption.setText(S);
        if (!S.matches("^([0-9A-Za-z ]{1,15})")) {
            JOptionPane.showMessageDialog(this, "Phone is number and no more than 15 numbers!!!.");
            txtDesciption.requestFocus();
            return false;
        }
        return true;
    }

    private boolean validDataBike() throws Exception {
        String S;
        S = txtBikeId.getText().trim().toUpperCase();
        txtBikeId.setText(S);
        if (!S.matches("^([0-9a-zA-Z]{1,10})")) {
            JOptionPane.showMessageDialog(this, "Motocyle ID: is not null, max length is 10, is not contains special characters");
            txtBikeId.requestFocus();
            return false;
        }

        S = txtModel.getText().trim().toUpperCase();
        txtModel.setText(S);
        if (S.length() >= 50 || S.length() == 0) {
            JOptionPane.showMessageDialog(this, "Model is required!!!.");
            txtModel.requestFocus();
            return false;
        }
        S = txtYear.getText().trim();
        txtYear.setText(S);
        if (!S.matches("^([0-9]{1,50})")) {
            JOptionPane.showMessageDialog(this, "Invalid year!!!");
            txtYear.requestFocus();
            return false;
        }

        S = txtCondition.getText();
        txtCondition.setText(S);
        if (S.length() >= 50 || S.length() == 0) {
            JOptionPane.showMessageDialog(this, "Condition is required!!!");
            txtCondition.requestFocus();
            return false;
        }
        S = txtPrice.getText();
        txtPrice.setText(S);
        if (!S.matches("^[+-]?([0-9]+([.][0-9]*)?|[.][0-9]+)$")) {
            JOptionPane.showMessageDialog(this, "Price is required!!!");
            txtPrice.requestFocus();
            return false;
        }
        S = txtQuantity.getText();
        txtQuantity.setText(S);
        if (!S.matches("^([0-9]{1,})")) {
            JOptionPane.showMessageDialog(this, "Quantity is required!!!");
            txtQuantity.requestFocus();
            return false;
        }
        S = txtWarranty.getText();
        txtWarranty.setText(S);
        if (S.length() >= 50 || S.length() == 0) {
            JOptionPane.showMessageDialog(this, "Warranty is required!!!");
            txtWarranty.requestFocus();
            return false;
        }
        return true;
    }

    public void loadBrandCbBox() {
        cbBox.removeAllItems();
        try {
            for (int i = 0; i < DAO.Connection.getDataBrand().size(); i++) {
                cbBox.addItem(DAO.Connection.getDataBrand().get(i).getBrandID());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }


    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {

            if (validDataBrand() != true) {
                return;
            } else {
                String idBrand = txtBrandId.getText().toUpperCase();
                String nameBrand = txtBrandName.getText();
                String country = txtCountry.getText();
                String description = txtDesciption.getText();
                Brand br = new Brand(idBrand, nameBrand, country, description);
                if (addNew) {
                    try {
                        if (checkIdBrand(idBrand)) {
                            JOptionPane.showMessageDialog(this, "Brand ID is duplicated!!!");
                            return;
                        }
                        if (DAO.Connection.insertBrand(br) == SUCCESS) {
                            loadDataBrand();
                            JOptionPane.showMessageDialog(this, "SAVE COMPLETE!!!");
                            loadBrandCbBox();
                            addNew = false;
                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                } else {
                    try {
                        if (DAO.Connection.updateBrand(br) == SUCCESS) {
                            loadDataBrand();
                            loadDataBrand();
                            JOptionPane.showMessageDialog(this, "UPDATE COMPLETE!!!");
                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        try {
            if (validDataBike() != true) {
                return;
            } else {
                String motoId = txtBikeId.getText();
                String model = txtModel.getText();
                String year = txtYear.getText();
                String condition = txtCondition.getText();
                String price = txtPrice.getText();
                String quantity = txtQuantity.getText();
                String warranty = txtWarranty.getText();
                String brandId = (String) cbBox.getSelectedItem();
                Bike bk = new Bike(motoId, model, year, condition, Float.parseFloat(price), Integer.parseInt(quantity), warranty, brandId);
                if (addNew1) {
                    try {
                        if (checkIdBike(motoId)) {
                            JOptionPane.showMessageDialog(this, "Moto ID is duplicated!!!");
                        }
                        if (DAO.Connection.insertBike(bk) == SUCCESS) {
                            loadDataBike();
                            JOptionPane.showMessageDialog(this, "SAVE COMPLETE!!!");
                            addNew1 = false;
                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                } else {
                    try {
                        if (DAO.Connection.updateBike(bk) == SUCCESS) {
                            loadDataBike();
                            JOptionPane.showMessageDialog(this, "UPDATE COMPLETE!!!");
                        }
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        addNew = true;
        txtBrandId.setText("");
        txtBrandName.setText("");
        txtCountry.setText("");
        txtDesciption.setText("");
        txtBrandId.setEditable(addNew);
        txtBrandId.requestFocus();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void tblBrandMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBrandMouseClicked
        addNew = false;
        int row = this.tblBrand.getSelectedRow();
        this.txtBrandId.setText((String) (tblBrand.getValueAt(row, 0)));
        this.txtBrandId.setEditable(false);
        this.txtBrandName.setText((String) (tblBrand.getValueAt(row, 1)));
        this.txtCountry.setText((String) (tblBrand.getValueAt(row, 2)));
        this.txtDesciption.setText((String) (tblBrand.getValueAt(row, 3)));
    }//GEN-LAST:event_tblBrandMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int a = JOptionPane.showConfirmDialog(this, "Are you sure?", "Remove", JOptionPane.YES_NO_OPTION);
        if (a == JOptionPane.YES_NO_OPTION) {
            try {
                int selectedRow = tblBrand.getSelectedRow();
                String brandID = tblBrand.getValueAt(selectedRow, 0).toString();
                if (findBrandNameBike(brandID)) {
                    JOptionPane.showMessageDialog(this, "The motocyle is still managed by this brand!!!");
                } else {
                    if (DAO.Connection.deleteBrand(brandID) == SUCCESS) {
                        dataBrand.remove(selectedRow);
                        txtBrandId.setText("");
                        txtBrandName.setText("");
                        txtCountry.setText("");
                        txtDesciption.setText("");

                    }
                    loadDataBrand();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }

        }

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        addNew1 = true;
        txtBikeId.setText("");
        txtBikeId.setEditable(addNew1);
        txtModel.setText("");
        txtYear.setText("");
        txtCondition.setText("");
        txtPrice.setText("");
        txtQuantity.setText("");
        txtWarranty.setText("");
        txtBikeId.requestFocus();

    }//GEN-LAST:event_jButton4ActionPerformed

    private void cbBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbBoxActionPerformed
//        int index = cbBox.getSelectedIndex();
//        if (index > 0) {
//            try {
//                Brand selectedValue = DAO.Connection.getDataBrand().get(index);
//            } catch (Exception ex) {
//                ex.printStackTrace();
//            }
//        }
    }//GEN-LAST:event_cbBoxActionPerformed

    private void tblBikeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBikeMouseClicked
        addNew1 = false;
        int row = this.tblBike.getSelectedRow();
        this.txtBikeId.setText((String) (tblBike.getValueAt(row, 0)));
        this.txtBikeId.setEditable(false);
        this.txtModel.setText((String) (tblBike.getValueAt(row, 1)));
        this.txtYear.setText((String) (tblBike.getValueAt(row, 2)));
        this.txtCondition.setText((String) (tblBike.getValueAt(row, 3)));
        this.txtPrice.setText("" + (tblBike.getValueAt(row, 4)));
        this.txtQuantity.setText("" + (tblBike.getValueAt(row, 5)));
        this.txtWarranty.setText((String) (tblBike.getValueAt(row, 6)));
        this.cbBox.setSelectedItem((String) (tblBike.getValueAt(row, 7)));
    }//GEN-LAST:event_tblBikeMouseClicked

    private void tblBikeMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBikeMouseReleased
        if (this.tblBike.isEditing()) {
            int row = tblBike.getSelectedRow();
            int column = tblBike.getSelectedColumn();
            tblBike.getCellEditor(row, column).cancelCellEditing();
        }
    }//GEN-LAST:event_tblBikeMouseReleased

    private void tblBrandMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBrandMouseReleased
        if (this.tblBrand.isEditing()) {
            int row = tblBrand.getSelectedRow();
            int column = tblBrand.getSelectedColumn();
            tblBrand.getCellEditor(row, column).cancelCellEditing();
        }
    }//GEN-LAST:event_tblBrandMouseReleased

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        int a = JOptionPane.showConfirmDialog(this, "Are you sure?", "Remove", JOptionPane.YES_NO_OPTION);
        if (a == JOptionPane.YES_NO_OPTION) {
            try {
                int selectedRow = tblBike.getSelectedRow();
                String bikeID = tblBike.getValueAt(selectedRow, 0).toString();
                if (DAO.Connection.deleteBike(bikeID) == SUCCESS) {
                    dataBike.remove(selectedRow);
                    txtBikeId.setText("");
                    txtModel.setText("");
                    txtPrice.setText("");
                    txtQuantity.setText("");
                    txtWarranty.setText("");
                    txtYear.setText("");
                    txtCondition.setText("");
                    loadDataBike();

                }
                loadDataBrand();
            } catch (Exception e) {
                e.printStackTrace();
            }

        }
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(BrandBikeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(BrandBikeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(BrandBikeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(BrandBikeUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                UserUI useUi = new UserUI();
//                useUi.setVisible(false);
//                useUi.setLocationRelativeTo(null);
//                useUi.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
//               
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cbBox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tblBike;
    private javax.swing.JTable tblBrand;
    private javax.swing.JTextField txtBikeId;
    private javax.swing.JTextField txtBrandId;
    private javax.swing.JTextField txtBrandName;
    private javax.swing.JTextField txtCondition;
    private javax.swing.JTextField txtCountry;
    private javax.swing.JTextField txtDesciption;
    private javax.swing.JTextField txtModel;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtWarranty;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables
}
